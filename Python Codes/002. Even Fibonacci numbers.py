#Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

def genFibonacciByOrder( firstNum,secondNum,stopMaxNum):
    fibList = [firstNum, secondNum];
    if fibList[0] + fibList[1] > stopMaxNum:
        return fibList;
    else:
        currFibOrder=2;
        nextFib=fibList[currFibOrder-1] + fibList[currFibOrder-2];
        while nextFib <= stopMaxNum:
            fibList.append(nextFib);
            currFibOrder+=1;
            nextFib = fibList[currFibOrder - 1] + fibList[currFibOrder - 2];


        return fibList;

if __name__ == "__main__":
    sumNum = 0;
    #print(genFibonacciByOrder(1,2,4000000))
    for eachFib in genFibonacciByOrder(1,2,4000000):
        if eachFib % 2 == 0:
            sumNum+= eachFib;
    print(genFibonacciByOrder(1,2,4000000));
